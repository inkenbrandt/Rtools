y <- new_data$time2
res <- wilcoxsign_test(x~y, zero.method = “Pratt”)
x <- new_data$time1
y <- new_data$time2
res <- wilcoxsign_test(x ~ y, zero.method = “Pratt”)
??wilcoxsign_test
x <- new_data$time1
y <- new_data$time2
res <- wilcoxsign_test(x ~ y,data=c(x,y) zero.method =“Pratt”)
x <- new_data$time1
y <- new_data$time2
res <- wilcoxsign_test(x ~ y,data=c(x,y), zero.method =“Pratt”)
x <- new_data$time1
y <- new_data$time2
df <- data.frame(x,y)
res <- wilcoxsign_test(x ~ y,data=df, zero.method =“Pratt”)
View(new_data)
x <- select(new_data, time1)
y <- select(new_data, time2)
df <- data.frame(x,y)
res <- wilcoxsign_test(x ~ y,data=df, zero.method =“Pratt”)
?spread
x <- select(new_data, time1)
?dim
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, time1, time2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df,StationId,year)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,year,mean,drop=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df,StationId,month, year)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,year,mean,drop=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df,StationId,decade)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,decade,mean,drop=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df,StationId,month)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,month,mean,drop=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, time1=1971, time2=1975, compare="year")
lent <- dim(new_data)
print lent
print(lent)
lent <- dim(new_data)[2]
print(lent)
x <- select(new_data, lent-2)
y <- select(new_data, lent-1)
df <- data.frame(x,y)
res <- wilcoxsign_test(x ~ y,data=df, zero.method =“Pratt”)
x <- select(new_data, lent-2)
y <- select(new_data, lent-1)
df <- data.frame(x,y)
res <- wilcoxsign_test(x ~ y,data=df, zero.method ="Pratt")
x <- c("gte","coin","dplyr","rkt","zoo","lubridate")
lapply(x, require, character.only=T)
x <- select(new_data, lent-2)
y <- select(new_data, lent-1)
df <- data.frame(x,y)
res <- wilcoxsign_test(x ~ y,data=df, zero.method ="Pratt")
x <- select(new_data, lent-2)
y <- select(new_data, lent-1)
df <- data.frame(x,y)
res <- wilcoxsign_test(x~y, zero.method ="Pratt")
View(x)
x <- select(new_data, lent-1)
y <- select(new_data, lent)
df <- data.frame(x,y)
res <- wilcoxsign_test(x~y, zero.method ="Pratt")
View(x)
View(y)
?spread
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, time1, time2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df,StationId,year)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,year,mean,drop=TRUE,convert=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df,StationId,month, year)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,year,mean,drop=TRUE,convert=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df,StationId,decade)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,decade,mean,drop=TRUE,convert=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df,StationId,month)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,month,mean,drop=TRUE,convert=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, time1=1971, time2=1975, compare="year")
lent <- dim(new_data)[2]
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, time1, time2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df,StationId,year)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,year,mean,convert=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df,StationId,month, year)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,year,mean,convert=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df,StationId,decade)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,decade,mean,convert=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df,StationId,month)
values <- unique(summarise(df, mean = median(ResultValue)))
values <- na.omit(spread(values,month,mean,convert=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, time1=1971, time2=1975, compare="year")
lent <- dim(new_data)[2]
x <- select(new_data, lent-1)
y <- select(new_data, lent)
x <- as.factor(x)
y <- as.factor(y)
df <- data.frame(x,y)
res <- wilcoxsign_test(x~y, zero.method ="Pratt")
View(x)
class(x)
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
x <- as.factor(x)
y <- as.factor(y)
df <- data.frame(x,y)
res <- wilcoxsign_test(x~y, zero.method ="Pratt")
class(x)
class(x[1])
?data.frame
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
df <- data.frame(x,y)
res <- wilcoxsign_test(x~y, df, zero.method ="Pratt")
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
df <- data.frame(x,y)
View(df)
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
df <- data.frame(x=x,y=y)
View(df)
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
df <- data.frame(x=x,y=y)
View(df)
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
df <- data.frame(x=X+Time1,y=X+Time2)
res <- wilcoxsign_test(x~y, df, zero.method ="Pratt")
x <- c(select(new_data, lent-1))
y <- c(select(new_data, lent))
df <- data.frame(x='X'+Time1,y='X'+Time2)
df <- data.frame(x='X'+time1,y='X'+time2)
df <- select(new_data,paste('X',time1),paste('X',time2))
lent <- dim(new_data)[2]
df <- select(new_data,lent-1,lent)
View(df)
df <- select(new_data,x = lent-1,y = lent)
View(df)
res <- wilcoxsign_test(x~y, df, zero.method ="Pratt")
print res
print(res)
View(new_data)
?gte
?Surv
View(df)
x <- c("gte","coin","dplyr","rkt","zoo","lubridate","tidyr")
lapply(x, require, character.only=T)
setInternet2(TRUE)
file_url <- "https://raw.githubusercontent.com/inkenbrandt/IPython/master/Sample_Na.csv"
download.file(file_url,destfile="Sample",  mode="wb")
data <- read.csv("Sample")
# Print date downloaded
dateDownloaded <- date()
print(paste('File downloaded ',dateDownloaded))
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, time1, time2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, year)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, month, year)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df, StationId, decade)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, decade, median, drop=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df, StationId, month)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, month, median, drop=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, time1=1971, time2=1975, compare="year")
lent <- dim(new_data)[2]
df <- select(new_data,x = lent-1,y = lent, StationId)
View(df)
dfg <- merge(x= df, y= data, by= "StationId", all.x=TRUE)
View(dfg)
grouping <- FALSE
if (grouping==TRUE){
dfg <- group_by(df,group)
}
?count
?min
library(NADA)
?NADA
library(NADA)
NADA
?NADA
cenmle
showMethods("cenmle")
x <- c("gte","coin","NADA","fitdistrplus","dplyr","rkt","zoo","lubridate","tidyr")
lapply(x, require, character.only=T)
install.packages("fitdistrplus")
x <- c("gte","coin","NADA","fitdistrplus","dplyr","rkt","zoo","lubridate","tidyr")
lapply(x, require, character.only=T)
setInternet2(TRUE)
file_url <- "https://raw.githubusercontent.com/inkenbrandt/IPython/master/Sample_Na.csv"
download.file(file_url,destfile="Sample",  mode="wb")
data <- read.csv("Sample")
# Print date downloaded
dateDownloaded <- date()
print(paste('File downloaded ',dateDownloaded))
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
grouping <- FALSE
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, time1, time2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, year)
values <- unique(summarise(df, median = median(ResultValue),min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, month, year)
values <- unique(summarise(df, median = median(ResultValue),min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df, StationId, decade)
values <- unique(summarise(df, median = median(ResultValue),min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, decade, median, drop=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df, StationId, month)
values <- unique(summarise(df, median = median(ResultValue), min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, month, median, drop=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, time1=1971, time2=1975, compare="year")
x <- c("gte","coin","NADA","fitdistrplus","rkt","zoo","lubridate","tidyr","dplyr")
lapply(x, require, character.only=T)
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
grouping <- FALSE
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, time1, time2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, year)
values <- unique(summarise(df, median = median(ResultValue),min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, month, year)
values <- unique(summarise(df, median = median(ResultValue),min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df, StationId, decade)
values <- unique(summarise(df, median = median(ResultValue),min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, decade, median, drop=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df, StationId, month)
values <- unique(summarise(df, median = median(ResultValue), min = min(ResultValue), count = count(ResultValue)))
values <- na.omit(spread(values, month, median, drop=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, time1=1971, time2=1975, compare="year")
x <- c("gte","coin","NADA","fitdistrplus","rkt","zoo","lubridate","tidyr","dplyr")
lapply(x, require, character.only=T)
setInternet2(TRUE)
file_url <- "https://raw.githubusercontent.com/inkenbrandt/IPython/master/Sample_Na.csv"
download.file(file_url,destfile="Sample",  mode="wb")
data <- read.csv("Sample")
# Print date downloaded
dateDownloaded <- date()
print(paste('File downloaded ',dateDownloaded))
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
grouping <- FALSE
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, t1, t2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, year)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, month, year)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df, StationId, decade)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, decade, median, drop=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df, StationId, month)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, month, median, drop=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, t1=time1, t2=time2, compare="year")
```
#Analyze Data#
We followed methods by the USGS from the publication: <a href=http://pubs.usgs.gov/sir/2012/5049/>_Methods for Evaluating Temporal Groundwater Quality Data and Results of Decadal-Scale Changes in Chloride, Dissolved Solids, and Nitrate Concentrations in Groundwater in the United States, 1988–2010_</a> to generate our trend detection tools
##Step-Trend Analysis##
"Thus, samples collected on a decadal time scale are likely to reflect an actual long-term change in concentration in the aquifer rather than a short-term change in concentration resulting from some other source of variability"
###Wilcoxon-Pratt signed-rank test###
wilcoxsign_test(zero.method = c (“Pratt”))
wilcox.test(immer$Y1, immer$Y2, paired=TRUE)
```{r}
lent <- dim(new_data)[2]
new_data2 <- select(new_data,x = lent-1,y = lent, StationId)
res <- wilcoxsign_test(x~y, new_data2, zero.method ="Pratt")
dfg <- merge(x= new_data2, y= data, by= "StationId", all.x=TRUE)
if (grouping==TRUE){
dfg <- group_by(df,group)
x <- c("gte","coin","NADA","fitdistrplus","rkt","zoo","lubridate","tidyr","dplyr")
lapply(x, require, character.only=T)
setInternet2(TRUE)
file_url <- "https://raw.githubusercontent.com/inkenbrandt/IPython/master/Sample_Na.csv"
download.file(file_url,destfile="Sample",  mode="wb")
data <- read.csv("Sample")
# Print date downloaded
dateDownloaded <- date()
print(paste('File downloaded ',dateDownloaded))
const <- "Sodium"
time1 <- 1972
time2 <- 1973
compare <- "year"
grouping <- FALSE
df <- mutate(data, month = month(as.Date(SampleDate, format = "%m/%d/%Y")), year = year(as.Date(SampleDate, format = "%m/%d/%Y")), decade = (((year-1900)-((year-1900)%%10))+1900))
pivdates <- function(const, t1, t2, compare){
df <- filter(df, Param==const, year>=time1, year<=time2)
df <- arrange(df, StationId, SampleDate)
if (compare=="year"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, year)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare=="year-month"){
df <- filter(df, year==time1 | year==time2)
df <- group_by(df, StationId, month, year)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, year, median, drop=TRUE))
} else if (compare =="decade"){
df <- filter(df, decade==time1 | decade==time2)
df <- group_by(df, StationId, decade)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, decade, median, drop=TRUE))
} else if (compare == "monthly"){
df <- filter(df, month==time1 | month==time2)
df <- group_by(df, StationId, month)
values <- unique(summarise(df, median = median(ResultValue)))
values <- na.omit(spread(values, month, median, drop=TRUE))
} else{
values = "none"
}
return(values)
}
new_data <- pivdates(const, t1=time1, t2=time2, compare="year")
new_data <- pivdates(const, t1=time1, t2=time2, compare="year")
library(NADA)
d <- data(Oahu)
View(Oahu)
print(AsLog)
library(NADA)
attach (Oahu)
LowAs=As* (1-AsCen)
AsStats=cenmle(As , AsCen , dist="gaussian")
AsLog=cenmle (As , AsCen, dist=" lognormal ")
print(AsStats)
print(AsLog)
AsLog= cenmle(As , AsCen, dist=" lognormal ")
LowAs=As* (1-AsCen)
AsStats=cenmle(As , AsCen , dist="gaussian")
AsLog= cenmle(As , AsCen, dist="lognormal")
print(AsStats)
print(AsLog)
library(rkt)
data(piel)
data(pielm)
data(pielw)
data(peil)
?rkt
data(pie1)
View(pie1)
data(pie1w)
View(pie1w)
data(Arsenic)
View(Arsenic)
data(pie1)
ex<-rkt(pie1$Year,pie1$SO4,pie1$Month,pie1$mm,TRUE)
print(ex)
plot(pie1$Year,pie1$SO4)
plot(pie1w$Date,pie1w$SO4)
data(pie1w)
ex<-rkt(pie1w$Date,pie1w$SO4)
print(ex)
plot(pie1w$Date,pie1w$SO4)
#plot(pie1w$Date,pie1w$SO4)
library(rkt)
data(pie1w)
data(pie1)
data(pie1w)
ex<-rkt(pie1w$Date,pie1w$SO4)
block<-replicate(length(pie1w$Date),1)
print(block)
?search
search()
?split
?rkt
